#!/bin/bash

# 
# Ovorost - daemon start/stop script.
#
# Author : Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
#


# -----------------------------------

LISP="/home/nlamirault/bin/sbcl-git"

EMACS=/usr/bin/emacs-snapshot-gtk

# Setup
APP_DIR=

#------------------------------------

ACTION=$1
ENV=$2
LOG_DIR=$3

# ------------------------------------

PRG=ovorost

DETACHTTY=/usr/bin/detachtty
ATTACHTTY=/usr/bin/attachtty

DRIBBLE_FILE=$LOG_DIR/.$PRG-$ENV-dribble
LOG_FILE=$LOG_DIR/.$PRG-$ENV-detachtty
PID_FILE=$LOG_DIR/.$PRG-$ENV-pid
SOCKET_FILE=$LOG_DIR/.$PRG-$ENV-socket

SLIME_PORT=4005

# ------------------------------------

cleanup() {

    rm $PID_FILE
    rm $SOCKET_FILE
    rm $DRIBBLE_FILE
    rm $LOG_FILE
}



dribble() {

    tail -f $DRIBBLE_FILE
}


log() {

    cat $LOG_FILE
}


slime() {

    echo "Starting SLIME on $SLIME_PORT"
    $EMACS -nw --eval "(slime-connect \"localhost\" '$SLIME_PORT')"
}


stop() {

    echo "Stopping Ovorost"
    kill -9 `cat $PID_FILE`
    cleanup
}


start() {

    case $ENV in

        vh-dev)
            OVOROST_ENV=vh-dev
            ;;

        vh-test)
            OVOROST_ENV=vh-test
            ;;

        vh-prod)
            OVOROST_ENV=vh-prod
            ;;
        
        *)
            echo "Environment not found. Available : vh-dev, vh-test or vh-prod"
            exit
            ;;
    esac
    
    echo "Starting Ovorost in environment $OVOROST_ENV"
    $DETACHTTY \
        --dribble-file $DRIBBLE_FILE \
        --log-file $LOG_FILE \
        --pid-file $PID_FILE \
        $SOCKET_FILE \
        $LISP \
        --eval "(push \"$APP_DIR\" asdf:*central-registry*)" \
        --eval "(asdf:operate 'asdf:load-op :swank)" \
        --eval "(asdf:operate 'asdf:load-op :ovorost)" \
        --eval "(setf swank:*use-dedicated-output-stream* nil)" \
        --eval "(swank:create-server :port $SLIME_PORT :dont-close t)" \
        --eval "(ovorost-web:start (ovorost-web:make-ovorost (quote $OVOROST_ENV)))"
}


restart() {

    stop
    start
}



attach() {

    ${ATTACHTTY} ${SOCKET_FILE} || true
}


usage() {

    echo "Usage: $PRG {help|start|stop|restart|attach|dribble|log|slime} environment log-directory"

}


case $ACTION in

    help)
        echo "Ovorost  management : "
        echo "start   - Start Ovorst"
        echo "stop    - Stop Ovorost"
        echo "restart - restart the lisp server"
        echo "attach  - attach to the lisp server"
        echo "dribble - tail the dribble file"
        echo "log     - cat the log file"
        echo "slime   - Connect Emacs to Ovorost"
        ;;

    start)
        start
        ;;

    stop)
        stop
        ;;
        
    restart)
        restart
        ;;
    
    attach)
        attach
        ;;

    dribble)
        dribble
        ;;

    log)
        log
        ;;

    slime)
        slime
        ;;

    cleanup)
        cleanup
        ;;

    *)
        usage
	;;
esac


exit 0

